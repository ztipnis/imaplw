language: cpp


matrix:
  include:
    - os: linux
      compiler: gcc
      cache:
        apt: true
        ccache: true
        directories:
          - /tmp/libressl
      dist: bionic
      env:
         - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libboost-all-dev
            - ninja-build
    - os: linux
      compiler: clang
      cache:
        apt: true
        ccache: true
        directories:
          - /tmp/libressl
      dist: bionic
      env:
         - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-5.0
          packages:
            - clang-5.0
            - libboost-all-dev
            - ninja-build
    - os: osx
      compiler: cmake
      cache:
        ccache: true
      osx_image: xcode11.3
      env:
         - MATRIX_EVAL=""
         - LIBRESSL_ROOT_DIR="/usr/local/opt/libressl"
         - PATH="/usr/local/opt/ccache/libexec:$PATH"
      addons:
        homebrew:
          packages:
          - libressl
          - boost
          - ninja
          - ccache


before_install:
  - eval "${MATRIX_EVAL}"
install:
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then set +e && git clone https://github.com/libressl-portable/portable /tmp/libressl || true && set -e && mkdir -p /tmp/libressl/build && pushd /tmp/libressl/build && cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -GNinja .. && ninja && sudo ninja install && popd ; fi
script:
  - git submodule update --remote --recursive --init
  - mkdir -p ./build
  - cd build
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then cmake -GNinja -DBoost_NO_BOOST_CMAKE=ON  ..; else cmake -GNinja ..; fi
  - ninja && ninja test